// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3528.JeffBot;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainrightSpeedController;
    public static SpeedController driveTrainleftSpeedController;
    public static RobotDrive driveTrainRobotDrive;
    public static Relay elevatorelevatorSpike;
    public static DigitalInput elevatorelevatorUpperLimit;
    public static Relay targetingRingLightSpike;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainrightSpeedController = new Talon(1, 2);
	LiveWindow.addActuator("DriveTrain", "rightSpeedController", (Talon) driveTrainrightSpeedController);
        
        driveTrainleftSpeedController = new Talon(1, 1);
	LiveWindow.addActuator("DriveTrain", "leftSpeedController", (Talon) driveTrainleftSpeedController);
        
        driveTrainRobotDrive = new RobotDrive(driveTrainleftSpeedController, driveTrainrightSpeedController);
	
        driveTrainRobotDrive.setSafetyEnabled(true);
        driveTrainRobotDrive.setExpiration(0.1);
        driveTrainRobotDrive.setSensitivity(0.5);
        driveTrainRobotDrive.setMaxOutput(1.0);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);        
        elevatorelevatorSpike = new Relay(1, 8);
	LiveWindow.addActuator("Elevator", "elevatorSpike", elevatorelevatorSpike);
        
        elevatorelevatorUpperLimit = new DigitalInput(1, 10);
	LiveWindow.addSensor("Elevator", "elevatorUpperLimit", elevatorelevatorUpperLimit);
        
        targetingRingLightSpike = new Relay(1, 2);
	LiveWindow.addActuator("Targeting", "RingLightSpike", targetingRingLightSpike);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
